# -*- coding: utf-8 -*-
"""password checker.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Qy14Cbd4ORmgUelSrlEI_xDsQ6sxDfOo
"""

import re

def check_password_strength(password):
    # Criteria for a strong password
    min_length = 8
    has_upper = re.compile(r'[A-Z]')
    has_lower = re.compile(r'[a-z]')
    has_digit = re.compile(r'\d')
    has_special = re.compile(r'[@$!%*?&#]')

    # Checking the criteria
    length_valid = len(password) >= min_length
    upper_valid = bool(has_upper.search(password))
    lower_valid = bool(has_lower.search(password))
    digit_valid = bool(has_digit.search(password))
    special_valid = bool(has_special.search(password))

    # Assessing strength
    strength = 0
    if length_valid:
        strength += 1
    if upper_valid:
        strength += 1
    if lower_valid:
        strength += 1
    if digit_valid:
        strength += 1
    if special_valid:
        strength += 1

    # Providing feedback
    if strength == 5:
        return "Very strong"
    elif strength == 4:
        return "Strong"
    elif strength == 3:
        return "Moderate"
    elif strength == 2:
        return "Weak"
    else:
        return "Very weak"

def main():
    while True:
        password = input("Enter a password to check its strength (or type 'exit' to quit): ")
        if password.lower() == 'exit':
            break
        strength = check_password_strength(password)
        print(f"Password strength: {strength}")
        if strength in ["Strong", "Very strong"]:
            print("You have entered a strong password. Exit.")
            break

if __name__ == "__main__":
    main()





